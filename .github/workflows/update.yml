name: Atualizar Problemas
on:
  issues:
    types: [opened]

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
      - name: Instalar jq
        run: sudo apt-get install -y jq

      - name: Processar Issue
        id: process
        run: |
          TITLE="${TITLE#Novo Problema: }"
          DESC=$(echo "$BODY" | grep -oP '(?<=\*\*Descrição:\*\* ).*' | head -1)
          
          echo "title=$(echo "$TITLE" | jq -R .)" >> $GITHUB_OUTPUT
          echo "desc=$(echo "$DESC" | jq -R .)" >> $GITHUB_OUTPUT

      - name: Atualizar JSON
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Baixar JSON atual
          curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/tiemerson/problema_teste/contents/problemas.json" > file.json

          # Processar dados
          CONTENT=$(jq -r '.content' file.json | base64 -d)
          SHA=$(jq -r '.sha' file.json)
          
          # Atualizar array
          UPDATED=$(echo "$CONTENT" | jq \
            --arg t "${{ steps.process.outputs.title }}" \
            --arg d "${{ steps.process.outputs.desc }}" \
            '. += [{"titulo":$t,"descricao":$d,"data":(now|todate)}]')

          # Commitar mudanças
          echo "$UPDATED" > problemas.json
          git add problemas.json
          git commit -m "Adicionar problema: ${{ steps.process.outputs.title }}"
          git push

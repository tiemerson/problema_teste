name: Atualizar Base de Problemas
on:
  issues:
    types: [opened]

jobs:
  processar-problema:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar ambiente
        run: |
          sudo apt-get install -y jq
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Obter dados da issue
        id: extrair-dados
        run: |
          TITULO=$(echo '${{ github.event.issue.title }}' | sed 's/^Problema: //')
          DESCRICAO=$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=\*\*Descrição:\*\* ).*' | head -1)
          DATA="${{ github.event.issue.created_at }}"
          
          echo "titulo=$(echo $TITULO | jq -R .)" >> $GITHUB_OUTPUT
          echo "descricao=$(echo $DESCRICAO | jq -R .)" >> $GITHUB_OUTPUT
          echo "data=$DATA" >> $GITHUB_OUTPUT

      - name: Atualizar arquivo JSON
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Baixar problemas.json atual
          curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/tiemerson/problema_teste/contents/problemas.json" > file.json

          # Processar dados
          SHA=$(jq -r '.sha' file.json)
          CONTEUDO=$(jq -r '.content' file.json | base64 -d)
          
          # Criar novo objeto
          NOVO_PROBLEMA=$(jq -n \
            --arg t "${{ steps.extrair-dados.outputs.titulo }}" \
            --arg d "${{ steps.extrair-dados.outputs.descricao }}" \
            --arg dt "${{ steps.extrair-dados.outputs.data }}" \
            '{titulo:$t, descricao:$d, data:$dt}')

          # Atualizar array
          NOVO_CONTEUDO=$(echo "$CONTEUDO" | jq --argjson novo "$NOVO_PROBLEMA" '. += [$novo]')

          # Commitar alterações
          echo "$NOVO_CONTEUDO" > problemas.json
          git add problemas.json
          git commit -m "Adicionar problema: ${{ steps.extrair-dados.outputs.titulo }}"
          git push
